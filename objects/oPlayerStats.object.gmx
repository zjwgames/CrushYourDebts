<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

display_set_gui_size(view_wview[0], view_hview[0]);
cash = 0;//100000;

// V-sync
// display_reset(anti-aliasing level, vsync);
display_reset(0, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var start = keyboard_check_pressed(vk_space);

if (room == rTitle &amp;&amp; start) {
    room_goto(rTutorial);
}

if (gamepad_is_connected(0)) {
    var start_gamepad = gamepad_button_check_pressed(0, gp_start);
    if (room == rTitle &amp;&amp; start_gamepad) {
        room_goto(rTutorial);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == rOne) {
    cash = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw GUI and score etc.

///Draw the stats

switch(room) {
    case rTitle :
        //Draw menu
        draw_set_halign(fa_center);
        draw_set_font(fnt_title);
        title = "##CRUSH YOUR DEBTS!"
        title2 = "####By Zachary J Wormleighton#(Solo Dev - First Game Jam)"; 
        draw_text_colour(room_width/2+4, 64+6, title, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, 64, title, c_white, c_white, c_white, c_white, 1);
        draw_set_font(fnt_start);
        draw_text_colour(room_width/2+2, 128+6, title2, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, 128, title2, c_white, c_white, c_white, c_white, 1);
        
        var str;
        if (gamepad_is_connected(0)) {
            str = "Press [Start]";
        } else {
            str = "Press [Space]";
        }
        
        draw_set_font(fnt_start);
        draw_text_colour(room_width/2+2, room_height-44, str, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, room_height-48, str, c_white, c_white, c_white, c_white, 1);
        break;
    
    case rTutorial:
        draw_set_font(fnt_start);
        var str = "###-Use arrow keys to move#-Collect $#-Press DOWN arrow in mid air#to crush red debt#Press SPACE on yellow exit#-You must crush all red debt to continue#-BACKSPACE to restart level";
        draw_text_colour(room_width/2+2, 44, str, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, 48, str, c_white, c_white, c_white, c_white, 1);
        break;
        
    case rEnd :
        //Draw menu
        draw_set_halign(fa_center);
        draw_set_font(fnt_title);
        title = "CRUSH YOUR DEBTS!####THE END"; 
        draw_text_colour(room_width/2+4, 64+6, title, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, 64, title, c_white, c_white, c_white, c_white, 1);
        
        var str;
        if (gamepad_is_connected(0)) {
            str = "Press [Start]";
        } else {
            str = "Press [Esc]";
        }
        
        draw_set_font(fnt_start);
        draw_text_colour(room_width/2+2, room_height-44, str, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, room_height-48, str, c_white, c_white, c_white, c_white, 1);
        break;
    /*
    case rHighscore :
        draw_set_halign(fa_center);
        draw_text_colour(view_wview[0]/2, 64+16, "Your Time was " + string(time/room_speed), c_white, c_white, c_white, c_white, 1); 
        draw_text_colour(view_wview[0]/2, 96+16, "Your Score was " + string(score), c_white, c_white, c_white, c_white, 1);
        draw_text_colour(view_wview[0]/2, 128+16, "The Highscore was " + string(highscore), c_white, c_white, c_white, c_white, 1);
        
        break;
    
    case rDeath :
        //Draw death screen
        draw_set_halign(fa_center);
        draw_set_font(fnt_title);
        draw_text_colour(room_width/2+4, 64+6, "You died!", c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, 64, "You died!", c_white, c_white, c_white, c_white, 1);
        
        //Draw number of sapphires to be deducted
        draw_set_font(fnt_start);
        draw_text_colour(room_width/2+2, room_height/2+4, "-1", c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, room_height/2, "-1", c_white, c_white, c_white, c_white, 1); 
        draw_sprite_ext(spr_sapphire_gui, 0, room_width/2+32, room_height/2+16, 1, 1, 0, c_white, 1);
        
        var str;
        if (gamepad_is_connected(0)) {
            str = "[A] try again";
        } else {
            str = "[Space] try again";
        }
        
        draw_set_font(fnt_start);
        draw_text_colour(room_width/2+2, room_height-44, str, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, room_height-48, str, c_white, c_white, c_white, c_white, 1);
        break;
    
    default:
        // Draw the heart spaces
        for (var i=0; i&lt;maxhp; i++) {
            draw_sprite_ext(spr_heart, 0, 24+i*36, 20, 1, 1, 0, c_black, .5);
        }
        
        //Draw the hearts
        for (var i=0; i&lt;hp; i++) {
            draw_sprite_ext(spr_heart, 0, 24+i*36, 20, 1, 1, 0, c_white, 1);
        }
        
        //Draw the sapphire count
        draw_set_halign(fa_right);
        draw_set_font(fnt_start);
        var str = "x"+string(sapphires);
        draw_text_colour(view_wview[0]-16, 8, str, c_white, c_white, c_white, c_white, 1);
        
        var text_width = string_width(str);
        draw_sprite(spr_sapphire_gui, 0, view_wview[0]-32-text_width, 22);
        
        //Adding to time stat
        time += 1;
        
        //Draw the timer
        //draw_text_colour(view_wview[0]/2, 8, string(floor(time/room_speed)), c_white, c_white, c_white, c_white, 1);
        
        //Draw the sapphires collected
        //draw_text_colour(view_wview[0]/2 + 64, 8, string(global.sapphires_collected_in_room), c_white, c_white, c_white, c_white, 1);
        break;
        */
    default:
        //Draw the money count
        draw_set_halign(fa_right);
        draw_set_font(fnt_start);
        var str = "$"+string(cash);
        draw_text_colour(view_wview[0]-32, 8, str, c_white, c_white, c_white, c_white, 1);
        
        //var text_width = string_width(str);
        //draw_sprite(spr_sapphire_gui, 0, view_wview[0]-32-text_width, 22);
        break;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
